{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/js/app.js","app/js/modules/scroll-hover.js"],"names":[],"mappings":"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","file":"../app.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import ScrollHover from './modules/scroll-hover';\r\n\r\n// =============== Применение ===============\r\n\r\n// wrap - класс элемента с overflow, внутри которого рсположен контент, который нужно скроллить по ховеру\r\n// content - класс элемента контента, его будем двигать\r\n// pxPreSec - количество пикселей, которые будут скроллиться за 1 секунду\r\n\r\nnew ScrollHover({\r\n    wrap: '.wrap',\r\n    content: '.content',\r\n    pxPreSec: 100\r\n});","(function(root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define([], factory);\r\n    } else if (typeof exports === 'object') {\r\n        // Node. Does not work with strict CommonJS, but\r\n        // only CommonJS-like environments that support module.exports,\r\n        // like Node.\r\n        module.exports = factory();\r\n        if (typeof window === 'object') {\r\n            window.ScrollHover = factory();\r\n        }\r\n    } else {\r\n        // Browser globals (root is window)\r\n        root.ScrollHover = factory();\r\n    }\r\n}(this, function() {\r\n    return class ScrollHover {\r\n        constructor(params) {\r\n            this.wrap = params.wrap;\r\n            this.content = params.content;\r\n            this.pxPreSec = params.pxPreSec || 100;\r\n            this.scope_attr = 'scrollhoverscope';\r\n\r\n            this.init();\r\n        }\r\n\r\n        // Служебный метод, нужен для генерации scopedID\r\n        rand(min, max) {\r\n            let rand = Math.floor(min + Math.random() * (max + 1 - min));\r\n            return rand;\r\n        }\r\n\r\n        // Служебный метод, генерирующий атрибут для изоляции стилей\r\n        scopedIdGenerate() {\r\n            let id = '';\r\n            for (let i = 0; i < 10; i++) {\r\n                id += String.fromCharCode(this.rand(97, 122));\r\n            }\r\n\r\n            return id;\r\n        }\r\n\r\n        // Метод, шаблонизирующий стили для скролла по ховеру. \r\n        // Подставляет значения, которые нужны для равномерной скорости скролла различного\r\n        // объема контента в контейнерах различной высоты\r\n        getStyleTemplate(scope, duration, translate_y) {\r\n            return `\r\n            ${this.wrap}[data-${this.scope_attr}=${scope}] .content {\r\n                transition: transform ${duration}ms linear;\r\n                will-change: transform;\r\n            }\r\n    \r\n            ${this.wrap}[data-${this.scope_attr}=${scope}]:hover .content {\r\n                transform: translate3d(0, ${translate_y}px, 1px);\r\n            }`;\r\n        }\r\n\r\n        // Метод, создающий элемент стилей внутри контейнера.\r\n        // Выполняет все расчеты для обеспечения нужной скорости скролла\r\n        makeStyle(wrap, content) {\r\n            // Генерируем атрибут изоляции стилей\r\n            let scope = this.scopedIdGenerate();\r\n            wrap.dataset[this.scope_attr] = scope;\r\n\r\n            // Получаем высоту контента\r\n            let content_height = parseInt(getComputedStyle(content).height);\r\n\r\n            // Получаем высоту контейнера и на ее основе получаем \r\n            // максимальное значение сдвига контента\r\n            let wrap_height = parseInt(getComputedStyle(wrap).height);\r\n            let translate_y = wrap_height - content_height;\r\n            // Если высота контента меньше высоты контейнера, то ничего двигать не надо\r\n            translate_y = (translate_y < 0) ? translate_y : 0;\r\n\r\n            // Зная величину сдвига, получаем длительность transition,\r\n            // чтобы обеспечить стабильную скорость скролла\r\n            let duration = (Math.abs(translate_y) / this.pxPreSec) * 1000;\r\n\r\n            // Из полученных данных генерируем индивидуальные стили\r\n            let style = document.createElement('style');\r\n            style.textContent = this.getStyleTemplate(scope, duration, translate_y);\r\n\r\n            // И добавляем их в свой контейнер\r\n            wrap.appendChild(style);\r\n        }\r\n\r\n        init() {\r\n            // На документ вешаем обработчик на событие захода мыши на элемент\r\n            document.addEventListener('mouseover', e => {\r\n                // Если мышь попала на блок контента\r\n                if (e.target.classList.contains(this.wrap.substring(1))) {\r\n                    let wrap = e.target;\r\n                    let content = wrap.querySelector(this.content);\r\n\r\n                    // И если в контейнере этого контента еще нет стилей для его скролла\r\n                    if (!wrap.querySelector('style')) {\r\n                        // То запустим создание этих стилей\r\n                        this.makeStyle(wrap, content);\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n}))"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}